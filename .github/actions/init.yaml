name: "Maven Init & Build"
description: "Initialize Maven project info, build, test, and generate JaCoCo report"

inputs:
  SKIP_BUILD:
    description: 'Skip the build steps and deploy the configmap only?'
    required: false
    default: 'NO'
  serviceName:
    description: 'Override service name (from Maven artifactId by default)'
    required: false
  serviceVersion:
    description: 'Override service version (from Maven project version by default)'
    required: false
  contributor:
    description: 'Define the market code that will be appended to the version in the release name.'
    required: false
  mavenBuildCommand:
    description: 'Override maven build command'
    required: false
  mavenTestCommand:
    description: 'Override maven test command'
    required: false
  mavenJacocoCommand:
    description: 'Override maven jacoco command'
    required: false

outputs:
  service_name:
    description: "The resolved service name"
    value: ${{ steps.init_info.outputs.service_name }}
  service_version:
    description: "The resolved service version"
    value: ${{ steps.init_info.outputs.service_version }}
  release_name:
    description: "The generated release name"
    value: ${{ steps.init_info.outputs.release_name }}
  ms_name:
    description: "The Maven artifact ID"
    value: ${{ steps.init_info.outputs.ms_name }}

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'
        cache: 'maven'

    - name: Decode Maven settings.xml
      shell: bash
      run: |
        mkdir -p ~/.m2
        echo "${MAVEN_SETTINGS_XML_BASE64}" | base64 -d > ~/.m2/settings.xml
      env:
        MAVEN_SETTINGS_XML_BASE64: ${{ env.MAVEN_SETTINGS_XML_BASE64 }}

    - name: Init - Get Maven Project Info and Define Variables
      id: init_info
      shell: bash
      run: |
        MAVEN_ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
        MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        SERVICE_NAME="${{ inputs.serviceName }}"
        if [ -z "$SERVICE_NAME" ]; then SERVICE_NAME="$MAVEN_ARTIFACT_ID"; fi
        SERVICE_VERSION="${{ inputs.serviceVersion }}"
        if [ -z "$SERVICE_VERSION" ]; then SERVICE_VERSION="$MAVEN_VERSION"; fi
        if [ -z "$SERVICE_NAME" ] || [ -z "$SERVICE_VERSION" ]; then
          echo "::error::Unknown Maven variables: SERVICE_NAME or SERVICE_VERSION could not be determined."
          exit 1
        fi
        CONTRIBUTOR="${{ inputs.contributor }}"
        RELEASE_NAME="$SERVICE_NAME-$SERVICE_VERSION"
        if [ ! -z "$CONTRIBUTOR" ]; then
          RELEASE_NAME="${RELEASE_NAME}-$CONTRIBUTOR"
        fi
        echo "service_name=$SERVICE_NAME" >> "$GITHUB_OUTPUT"
        echo "service_version=$SERVICE_VERSION" >> "$GITHUB_OUTPUT"
        echo "release_name=$RELEASE_NAME" >> "$GITHUB_OUTPUT"
        echo "ms_name=$MAVEN_ARTIFACT_ID" >> "$GITHUB_OUTPUT"

    - name: Set Maven Command
      id: maven_config
      shell: bash
      run: |
        DEFAULT_MAVEN_BUILD_COMMAND="clean package -DskipTests"
        DEFAULT_MAVEN_TEST_COMMAND="test"
        DEFAULT_MAVEN_JACOCO_COMMAND="jacoco:report"
        MAVEN_BUILD_COMMAND="${{ inputs.mavenBuildCommand || env.DEFAULT_MAVEN_BUILD_COMMAND }}"
        MAVEN_TEST_COMMAND="${{ inputs.mavenTestCommand || env.DEFAULT_MAVEN_TEST_COMMAND }}"
        MAVEN_JACOCO_COMMAND="${{ inputs.mavenJacocoCommand || env.DEFAULT_MAVEN_JACOCO_COMMAND }}"
        echo "maven_build_command=$MAVEN_BUILD_COMMAND" >> $GITHUB_OUTPUT
        echo "maven_test_command=$MAVEN_TEST_COMMAND" >> $GITHUB_OUTPUT
        echo "maven_jacoco_command=$MAVEN_JACOCO_COMMAND" >> $GITHUB_OUTPUT

    - name: Run Maven Build
      if: ${{ inputs.SKIP_BUILD != 'YES' }}
      shell: bash
      run: mvn -s ~/.m2/settings.xml ${{ steps.maven_config.outputs.maven_build_command }}

    - name: Run Tests
      if: ${{ inputs.SKIP_BUILD != 'YES' }}
      shell: bash
      run: mvn -s ~/.m2/settings.xml ${{ steps.maven_config.outputs.maven_test_command }}

    - name: Generate JaCoCo Report
      if: ${{ inputs.SKIP_BUILD != 'YES' }}
      shell: bash
      run: mvn -s ~/.m2/settings.xml ${{ steps.maven_config.outputs.maven_jacoco_command }}
